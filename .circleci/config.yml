version: 2
references:
  ## Workspace
  workspace: &workspace
               ~/agent_app_android

  ## Docker image configurations
  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
      CC_TEST_REPORTER_ID: 1de11a5a55172d037a73615b5b429462ad642d9b0d10e0a4e053fccc484e4056

  ## Cache
  cache_key: &cache_key
    key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle

  ## Android command
  download_dependencies: &download_dependencies
    run:
      name: Download Dependencies
      command: ./gradlew androidDependencies


  generate_test_coverage:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *download_dependencies
      - *save_cache
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Genarate Jacoco report
          command: ./gradlew jacocoTestReport

      - run:
          name: Upload to Code Climate
          command: |
            JACOCO_SOURCE_PATH=app/build/reports/jacoco/jacocoTestReport ./cc-test-reporter \
              format-coverage target/site/jacoco/jacocoTestReport.xml     \
              --input-type jacoco
            ./cc-test-reporter upload-coverage
jobs:
  test:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *download_dependencies
      - *save_cache
      - run:
          name: Test
          command: ./gradlew lint testDebugUnitTest
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test
      - generate_test_coverage:
          requires:
            - test